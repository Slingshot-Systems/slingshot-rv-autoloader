name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version number (leave blank for automatic minor version bump)"
        required: false
  # pull_request: # only used for testing the action

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - run: uv run poe test # run tests. why not?

      - name: Set version
        id: set_version
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            uv version ${{ github.event.inputs.version }}
          else
            # Bump minor version
            uv version --bump minor
            # Get new version after bump
            NEW_VERSION=$(uv version --short)
            echo "VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Version up PACKAGE file
        run: |
          sed -i "s/version: .*/version: ${{ steps.set_version.outputs.VERSION }}/" src/PACKAGE
          sed -i "s/version: .*/version: ${{ steps.set_version.outputs.VERSION }}/" slingshot_rv_autoloader.cfg.EXAMPLE

      - name: Check if there are any changes
        id: verify_diff
        run: |
          git diff --quiet . || echo "changed=true" >> $GITHUB_OUTPUT

      - name: Commit updated files
        if: steps.verify_diff.outputs.changed == 'true'
        shell: bash
        run: |
          set -euo pipefail
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add src/PACKAGE pyproject.toml slingshot_rv_autoloader.cfg.EXAMPLE
          git commit -m "Bump version to ${{ steps.set_version.outputs.VERSION }}"
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            git push origin HEAD:${{ github.head_ref }}
          else
            git push
          fi

      - name: Build and package
        run: uv run poe build

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: build/*.rvpkg
          tag_name: v${{ steps.set_version.outputs.VERSION }}
          generate_release_notes: true
